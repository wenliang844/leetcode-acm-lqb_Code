package 蓝桥杯.蓝桥杯大赛历届真题.第八届.省赛;

public class 填空3承压计算 {

    public static void main(String[] args) {
        /***
         构造一颗二叉树,然后递归,左子树一半,右子树一半
         用一个数组也可以,从1开始,2n是left  2n+1是right

         */
        double a[] = {0,
                7,
                5, 8,
                7, 8, 8,
                9, 2, 7, 2,
                8, 1, 4, 9, 1,
                8, 1, 8, 8, 4, 1,
                7, 9, 6, 1, 4, 5, 4,
                5, 6, 5, 5, 6, 9, 5, 6,
                5, 5, 4, 7, 9, 3, 5, 5, 1,
                7, 5, 7, 9, 7, 4, 7, 3, 3, 1,
                4, 6, 4, 5, 5, 8, 8, 3, 2, 4, 3,
                1, 1, 3, 3, 1, 6, 6, 5, 5, 4, 4, 2,
                9, 9, 9, 2, 1, 9, 1, 9, 2, 9, 5, 7, 9,
                4, 3, 3, 7, 7, 9, 3, 6, 1, 3, 8, 8, 3, 7,
                3, 6, 8, 1, 5, 3, 9, 5, 8, 3, 8, 1, 8, 3, 3,
                8, 3, 2, 3, 3, 5, 5, 8, 5, 4, 2, 8, 6, 7, 6, 9,
                8, 1, 8, 1, 8, 4, 6, 2, 2, 1, 7, 9, 4, 2, 3, 3, 4,
                2, 8, 4, 2, 2, 9, 9, 2, 8, 3, 4, 9, 6, 3, 9, 4, 6, 9,
                7, 9, 7, 4, 9, 7, 6, 6, 2, 8, 9, 4, 1, 8, 1, 7, 2, 1, 6,
                9, 2, 8, 6, 4, 2, 7, 9, 5, 4, 1, 2, 5, 1, 7, 3, 9, 8, 3, 3,
                5, 2, 1, 6, 7, 9, 3, 2, 8, 9, 5, 5, 6, 6, 6, 2, 1, 8, 7, 9, 9,
                6, 7, 1, 8, 8, 7, 5, 3, 6, 5, 4, 7, 3, 4, 6, 7, 8, 1, 3, 2, 7, 4,
                2, 2, 6, 3, 5, 3, 4, 9, 2, 4, 5, 7, 6, 6, 3, 2, 7, 2, 4, 8, 5, 5, 4,
                7, 4, 4, 5, 8, 3, 3, 8, 1, 8, 6, 3, 2, 1, 6, 2, 6, 4, 6, 3, 8, 2, 9, 6,
                1, 2, 4, 1, 3, 3, 5, 3, 4, 9, 6, 3, 8, 6, 5, 9, 1, 5, 3, 2, 6, 8, 8, 5, 3,
                2, 2, 7, 9, 3, 3, 2, 8, 6, 9, 8, 4, 4, 9, 5, 8, 2, 6, 3, 4, 8, 4, 9, 3, 8, 8,
                7, 7, 7, 9, 7, 5, 2, 7, 9, 2, 5, 1, 9, 2, 6, 5, 3, 9, 3, 5, 7, 3, 5, 4, 2, 8, 9,
                7, 7, 6, 6, 8, 7, 5, 5, 8, 2, 4, 7, 7, 4, 7, 2, 6, 9, 2, 1, 8, 2, 9, 8, 5, 7, 3, 6,
                5, 9, 4, 5, 5, 7, 5, 5, 6, 3, 5, 3, 9, 5, 8, 9, 5, 4, 1, 2, 6, 1, 4, 3, 5, 3, 2, 4, 1,
             /*   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0*/};

        //非二叉树;
        int index = 1;
        int step = index;
        System.out.println(a[1] / 2 / 2);
        System.out.println(a.length);
        for (int i = 1; i < a.length - 29; i++) {
            a[i + index] += a[i] / 2;
            a[i + index + 1] += a[i] / 2;

            step--;
            if (step == 0) {
                index++;
                step = index;
            }

        }

        for (int i = 0; i < a.length; i++) {
            System.out.print(a[i] + "\t");
        }
        System.out.println("------------");
        for (int i = a.length-1; i >= a.length-30 ; i--) {
            System.out.println(a[i]);
        }


    }

    static class Tree {
        int val;
        Tree left;
        Tree right;

        public Tree() {
        }

        public Tree(int val, Tree left, Tree right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }
    }
}
