package 数据结构算法教程.java数据结构算法.第8节_树tree.AVL.B_tree;

public class B_Tree {
    public static void teachersTest1() {
        /**
         B树就是一个多叉树
         特性树 -2-3树:是一种最简单的B树结构
         1. 2-3树的所有叶子节点在同一层
         2. 有两个子节点的节点叫二节点,二节点要莫没有子节点,要莫有两个子节点
         3. 三节点的节点叫三节点,三节点要莫没有子节点,要莫有三个子节点
         4. 2-3树是由二节点 三节点构成的树
         ***自己构建一颗二三树
         *          16
         *     12           26|32
         * 8|10  14    20|24  28   34|38

         16,24,12,32,14,{26},34,{10},8,28,{38},20  ->{}表示需要调整的
         *构建过程******
         *|16|  --->  |16|24|  --->
         * |16|        --->   |16|        --->     |16|      26上移--->
         *|12| |24|       |12|     |24|32|     |12|14|  |24|32|
         *
         *      |16|26|      ------>     |16|26|
         * |12|14| |24| |32|     |12|14|  |24|  |32|34|
         *
         *       |16|26|         10下移--->     |16|
         * |12|14|  |24|  |32|34|            12     26
         *                               10    14  24 32|34
         *
         *       |16|         --->     |16|      38--->
         *    12     26             12     26|32
         * 8|10  14  24 32|34   8|10  14  24 28 34
         *
         *         |16|       20--->       |16|
         *      12     26|32            12       26|32
         *  8|10 14  24 28 34|38    8|10 14  20|24 28 34|38

         4节点也是一样的
         B-Tree树 B-树就是B树
         B+树
         *B树的变体 B+数:所有的数据放在叶子节点, 非叶子节点是叶子节点的索引,适合文件索引系统
         * 链表的分段处理,
         B*树
         *是B+树的一个变体,在B+树的基础上,加上指向兄弟的索引,
         */
    }

    public static void main(String[] args) {
        /***
         永远是和同频人在竞争
         多路查找树
         二叉树和B树:
         二叉树存在的问题:
         1.加载内存,层次过高
         2. 2-3树
         3. 2-3-树
         4. B+树 B*树
        其他说明:
         系统说了B树 b+ b*树
         理解文件系统, 数据库索引
         */

    }
























}
